<launch> 

	<!-- Name of the YAML file containing the marker positions -->
	<!-- <arg name="YAML_file_name" default="demo_marker_positions"/> -->
	<arg name="YAML_file_name" default="hover_marker_positions"/>

	<!-- File containing the the marker positions in the trackable's frame of reference -->
	<arg name="marker_positions_file" default="$(find monocular_pose_estimator)/marker_positions/$(arg YAML_file_name).yaml"/> 

	<group ns="monocular_pose_estimator" >
		<node name="monocular_pose_estimator" pkg="monocular_pose_estimator" type="monocular_pose_estimator" respawn="false"> 
			<rosparam command="load" file="$(arg marker_positions_file)"/>
			<param name= "threshold_value" value = "140" />
			<param name= "gaussian_sigma" value = "0.6" />
			<param name= "min_blob_area" value = "10" />
			<param name= "max_blob_area" value = "200" />
			<param name= "max_width_height_distortion" value = "0.5" />
			<param name= "max_circular_distortion" value = "0.5" />
			<param name= "back_projection_pixel_tolerance" value = "5" />
			<param name= "nearest_neighbour_pixel_tolerance" value = "7" />
			<param name= "certainty_threshold" value = "0.75" />
			<param name= "valid_correspondence_threshold" value = "0.7" />
		</node>
	
		<node name="view_visualisation_image" pkg="image_view" type="image_view" args="image:=/monocular_pose_estimator/image_with_detections" />
	</group>

	<!-- rosbag play -->
	<!-- <node pkg="rosbag" type="play" name="player" output="screen" args="-d 1 -l $(find monocular_pose_estimator)/bags/test_data.bag"/> -->
	
	<node pkg="rosbag" type="play" name="player" output="screen" args="-d 1 -l $(find monocular_pose_estimator)/bags/controllerTest.bag"/>

	<node pkg="monocular_pose_estimator" type="kalman_filter.py" name="kalman_filter" output="screen" >
	</node>

	<node pkg="monocular_pose_estimator" type="pid.py" name="pid" output="screen" >
	</node>

	<node pkg="monocular_pose_estimator" type="Tkinter_GUI.py" name="GUI" output="screen" >
	</node>

	<node pkg="rosserial_python" type="serial_node.py" name="microcontroller">
		<param name="port" value="/dev/ttyACM0"/>
		<param name="baud" value="57600"/>
	</node>

  <node ns="usb_cam" pkg="image_proc" type="image_proc" name="image_proc"/>

<node name="raw_image" pkg="image_view" type="image_view" args="image:=/usb_cam/image_rect" />

</launch>
